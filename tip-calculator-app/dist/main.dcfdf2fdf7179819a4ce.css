*:where(:not(iframe, canvas, img, svg, video):not(svg *, symbol *)){all:unset;display:revert}*,*::before,*::after{box-sizing:border-box}ol,ul,menu{list-style:none}img{max-width:100%}table{border-collapse:collapse}textarea{white-space:revert}:where([hidden]){display:none}:where([contenteditable]){-moz-user-modify:read-write;-webkit-user-modify:read-write;overflow-wrap:break-word;-webkit-line-break:after-white-space}:where([draggable="true"]){-webkit-user-drag:element}:root{--c-strong-cyan: hsl(172, 67%, 45%);--c-strong-cyan-alt: hsla(172, 61%, 77%, 1);--c-very-dark-cyan: hsl(183, 100%, 15%);--c-dark-grayish-cyan: hsl(186, 14%, 43%);--c-dark-grayish-cyan-alt: hsl(184, 14%, 56%);--c-light-grayish-cyan: hsl(185, 41%, 84%);--c-light-grayish-cyan-alt: hsl(189, 41%, 97%);--c-white: hsl(0, 0%, 100%);--c-red: hsla(13, 70%, 61%, 1);--ff-space-mono: "Space Mono", monospace;font-size:62.5%}body{font-size:1.6rem;background-color:var(--c-light-grayish-cyan);font-family:var(--ff-space-mono);font-weight:700;color:var(--c-dark-grayish-cyan)}.screen-reader-text{border:0;clip:rect(1px, 1px, 1px, 1px);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;word-wrap:normal !important}.site-header{padding-top:5rem;padding-bottom:4rem}@media(min-width: 63.9475em){.site-header{padding-top:16.3rem;padding-bottom:8.786rem}}.site-logo{display:block;margin:0 auto}input{background-color:var(--c-light-grayish-cyan-alt);color:var(--c-very-dark-cyan);display:block;height:4.8rem;padding:.6rem 1.748rem;width:100%;text-align:right;border-radius:5px;margin-bottom:3.2rem;position:relative;z-index:10;font-size:2.4rem;line-height:3.6rem}input.error{outline:2px solid var(--c-red)}input.success{outline:2px solid var(--c-strong-cyan)}input:focus{outline:2px dashed var(--c-very-dark-cyan)}@media(min-width: 63.9475em){input{margin-bottom:4rem}}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-outer-spin-button,input[type=number]::-webkit-inner-spin-button{-webkit-appearance:none}::-webkit-input-placeholder{color:var(--c-very-dark-cyan);opacity:.35}::-moz-placeholder{color:var(--c-very-dark-cyan);opacity:.35}:-ms-input-placeholder{color:var(--c-very-dark-cyan);opacity:.35}:-moz-placeholder{color:var(--c-very-dark-cyan);opacity:.35}input[class*=icon-]{padding-left:4rem;background-repeat:no-repeat;background-position-y:center;background-position-x:1.9rem}input[class*=icon-dollar]{background-image:url(9f9be3534a9295a65957.svg)}input[class*=icon-person]{background-image:url(65bfd20465dd1d2cb58c.svg)}input[type=radio]{position:absolute;opacity:0;cursor:pointer;height:0;width:0}input[type=radio]+label{background-color:var(--c-very-dark-cyan);color:var(--c-white);font-size:2.4rem;line-height:3.6rem;text-align:center;border-radius:5px;transition:background-color 300ms ease-in-out;padding:.6rem 1.7rem;cursor:pointer}input[type=radio]+label:hover,input[type=radio]+label:active{background-color:var(--c-strong-cyan-alt);color:var(--c-very-dark-cyan)}input[type=radio]+label:focus{outline:2px dashed var(--c-very-dark-cyan)}input[type=radio]:checked+label{background-color:var(--c-strong-cyan);color:var(--c-very-dark-cyan)}legend,label{font-size:1.6rem;line-height:2.4rem;margin-bottom:.6rem;display:block}legend{margin-bottom:1.6rem}.button,input[type=submit],input[type=reset]{--background-color: var(--c-strong-cyan);background-color:var(--background-color);color:var(--c-very-dark-cyan);text-align:center;text-transform:uppercase;cursor:pointer;transition:all 300ms ease-in-out}.button:hover,.button:active,input[type=submit]:hover,input[type=submit]:active,input[type=reset]:hover,input[type=reset]:active{--background-color: var(--c-strong-cyan-alt)}.button:focus,input[type=submit]:focus,input[type=reset]:focus{outline:2px dashed var(--c-strong-cyan)}.button[disabled],input[type=submit][disabled],input[type=reset][disabled]{opacity:.35;--background-color: hsla(183, 78%, 24%, 1);cursor:no-drop}@media(min-width: 63.9475em){.button,input[type=submit],input[type=reset]{font-size:2rem;line-height:3rem}}.tip-calculator-form{border-radius:25px;background-color:var(--c-white);padding:3.2rem;max-width:92rem;margin:0 auto}@media(min-width: 63.9475em){.tip-calculator-form{display:grid;grid-template-columns:repeat(2, 1fr);gap:4.8rem;padding:3.2rem 3.2rem 3.2rem 4.8rem}.tip-calculator-form input[name=number-of-people]{margin-bottom:1.6rem}.tip-calculator-form__fields{margin-top:1.3rem}}.tip-calculator-form__results{padding:3.7rem 2.4rem 2.4rem;background-color:var(--c-very-dark-cyan);color:var(--c-strong-cyan);border-radius:15px}.tip-calculator-form__results input[type=reset]{margin:3.2rem 0 0}@media(min-width: 63.9475em){.tip-calculator-form__results{padding:4rem;display:flex;flex-direction:column}.tip-calculator-form__results input[type=reset]{margin-top:auto}}.tip-calculator-form input[name=tip-custom]::-webkit-input-placeholder{color:#547878;opacity:1}.tip-calculator-form input[name=tip-custom]::-moz-placeholder{color:#547878;opacity:1}.tip-calculator-form input[name=tip-custom]:-ms-input-placeholder{color:#547878;opacity:1}.tip-calculator-form input[name=tip-custom]:-moz-placeholder{color:#547878;opacity:1}.tip-calculator-form fieldset{display:grid;grid-template-columns:repeat(2, 1fr);gap:1.656rem;margin-bottom:3.2rem;position:relative}.tip-calculator-form fieldset label,.tip-calculator-form fieldset input{margin:0}@media(min-width: 63.9475em){.tip-calculator-form fieldset{grid-template-columns:repeat(3, 1fr);margin-bottom:4rem;column-gap:1.4rem;row-gap:1.6rem}}.tip-calculator-form .error-message{color:var(--c-red);display:block;position:absolute;top:calc(100% - 5px);left:0;margin-top:1rem;z-index:5;font-size:1.4rem;line-height:1}.tip-calculator-form .input-wrap{position:relative}.result{display:flex;justify-content:space-between;margin-bottom:2rem}@media(min-width: 63.9475em){.result{align-items:center}}.result__text,.result__value{margin:0}.result__label{color:var(--c-white);display:block;line-height:2.4rem}.result__details{font-size:1.3rem;line-height:1.9rem;color:#7e9ea0}.result__value{color:var(--c-strong-cyan);font-size:3.2rem;line-height:4.7rem}@media(min-width: 63.9475em){.result__value{font-size:4.8rem;line-height:7.1rem}}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/